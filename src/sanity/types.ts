/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch';
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: 'sanity.imagePalette';
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions';
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: 'sanity.fileAsset';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: 'geopoint';
  lat?: number;
  lng?: number;
  alt?: number;
};

export type NavMenu = {
  _id: string;
  _type: 'navMenu';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  links?: Array<{
    name?: string;
    url?: string;
    _key: string;
  }>;
};

export type BlockContent = Array<{
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: 'span';
    _key: string;
  }>;
  style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
  listItem?: 'bullet' | 'number';
  markDefs?: Array<{
    href?: string;
    _type: 'link';
    _key: string;
  }>;
  level?: number;
  _type: 'block';
  _key: string;
}>;

export type Van = {
  _id: string;
  _type: 'van';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  slug?: Slug;
  type?: 'simple' | 'rugged' | 'luxury';
  price?: number;
  hosted?: boolean;
  description?: string;
  addedDate?: string;
  mainImage?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: 'image';
  };
};

export type SanityImageCrop = {
  _type: 'sanity.imageCrop';
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot';
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: 'sanity.imageAsset';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData';
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata';
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Slug = {
  _type: 'slug';
  current?: string;
  source?: string;
};

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityFileAsset
  | Geopoint
  | NavMenu
  | BlockContent
  | Van
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | Slug;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./src/sanity/lib/queries.ts
// Variable: VANS_QUERY
// Query: *[_type == 'van'   && defined(slug.current)][0...6]{      name,      type,      price,      mainImage{          alt,          asset->{              url          }      },      slug,     } | order(name)
export type VANS_QUERYResult = Array<{
  name: string | null;
  type: 'luxury' | 'rugged' | 'simple' | null;
  price: number | null;
  mainImage: {
    alt: string | null;
    asset: {
      url: string | null;
    } | null;
  } | null;
  slug: Slug | null;
}>;
// Variable: VAN_QUERY
// Query: *[_type == 'van' && slug.current == $slug][0]{    name,    type,    description,    price,    mainImage{        alt,        asset->{            url        }    }, }
export type VAN_QUERYResult = {
  name: string | null;
  type: 'luxury' | 'rugged' | 'simple' | null;
  description: string | null;
  price: number | null;
  mainImage: {
    alt: string | null;
    asset: {
      url: string | null;
    } | null;
  } | null;
} | null;
// Variable: MAIN_NAV_QUERY
// Query: *[_type == 'navMenu' && slug.current == 'main-nav-menu'][0]{  links[]{    name,    url} }
export type MAIN_NAV_QUERYResult = {
  links: Array<{
    name: string | null;
    url: string | null;
  }> | null;
} | null;
// Variable: HOST_NAV_QUERY
// Query: *[_type == 'navMenu'   && slug.current == 'host-nav-menu'][0]{    links[]{      name,      url    }  }
export type HOST_NAV_QUERYResult = {
  links: Array<{
    name: string | null;
    url: string | null;
  }> | null;
} | null;
// Variable: HOST_VANS_QUERY
// Query: *[_type == 'van'  && defined(slug.current)  && hosted == true][0...3]{  name,  price,  slug,  mainImage{    asset->{url},    alt    }  } | order(name)
export type HOST_VANS_QUERYResult = Array<{
  name: string | null;
  price: number | null;
  slug: Slug | null;
  mainImage: {
    asset: {
      url: string | null;
    } | null;
    alt: string | null;
  } | null;
}>;
// Variable: HOST_VAN_QUERY
// Query: *[_type == 'van'    && slug.current == $slug][0]{    name,    price,    mainImage{        asset->{url},        alt        },    description,  }
export type HOST_VAN_QUERYResult = {
  name: string | null;
  price: number | null;
  mainImage: {
    asset: {
      url: string | null;
    } | null;
    alt: string | null;
  } | null;
  description: string | null;
} | null;

// Query TypeMap
import '@sanity/client';
declare module '@sanity/client' {
  interface SanityQueries {
    "*[_type == 'van'\n   && defined(slug.current)][0...6]{\n      name,\n      type,\n      price,\n      mainImage{\n          alt,\n          asset->{\n              url\n          }\n      },\n      slug,  \n   } | order(name)": VANS_QUERYResult;
    "\n    *[_type == 'van'\n && slug.current == $slug][0]{\n    name,\n    type,\n    description,\n    price,\n    mainImage{\n        alt,\n        asset->{\n            url\n        }\n    },\n }": VAN_QUERYResult;
    "\n    *[_type == 'navMenu'\n && slug.current == 'main-nav-menu'][0]{\n  links[]{\n    name,\n    url}\n }": MAIN_NAV_QUERYResult;
    "*[_type == 'navMenu' \n  && slug.current == 'host-nav-menu'][0]{\n    links[]{\n      name,\n      url\n    }\n  }": HOST_NAV_QUERYResult;
    "\n    *[_type == 'van'\n  && defined(slug.current)\n  && hosted == true][0...3]{\n  name,\n  price,\n  slug,\n  mainImage{\n    asset->{url},\n    alt\n    }\n  } | order(name)": HOST_VANS_QUERYResult;
    "*[_type == 'van'\n    && slug.current == $slug][0]{\n    name,\n    price,\n    mainImage{\n        asset->{url},\n        alt\n        },\n    description,\n  }": HOST_VAN_QUERYResult;
  }
}
